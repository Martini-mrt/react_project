import React, { useEffect, useState } from "react";
import "./MoviesByGenrePage.scss";
import { MoviesByGenrePageProps } from "./MoviesByGenrePage.types";
import SectionList from "../../layouts/Section";
import ListCardMoviesByGenre from "../../components/ListCardMoviesByGenre";
import { useParams } from "react-router";
import { useMoviesByFilter } from "../../hooks/Movie/useMovie";
import { translateGenres } from "../../utils/translateGenres";
import { capitalize } from "../../utils/capitalize";
import { TMovie } from "../../schemas/MoviesSchem";

// ? BACKEND —Ç—É–ø–∏—Ç –≤—Ç–æ—Ä–∏—Ç –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –º–µ–Ω—è–µ—à—å —Ån—Ä–∞–Ω–∏—Ü—ã –∏ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∏—Ö, –Ω—É–∂–Ω–æ –±—ã–ª–æ 15 –ø–æ–ª—É—á–∏—Ç—å –∏ 10 –ø—Ä–∏–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç
// ? —Å–¥–µ–ª–∞–ª 15 –ø–æ–ª—É—á–∞–µ–º –∏ 15 –ø—Ä–∏–±–∞–ª—è–µ–º
// ! –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –±–µ–∫ —á—Ç–æ–± —Å–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–µ—â–µ"

const MoviesByGenrePage: React.FC<MoviesByGenrePageProps> = () => {
  const { genre } = useParams();
  const heading = genre && capitalize(translateGenres(genre) as string);

  const [page, setPage] = useState(1);
  const [movies, setMovies] = useState<TMovie[]>([]);
  // const [limit, setLimit] = useState(10);

  const { data, error, isSuccess, isLoading } = useMoviesByFilter({
    genre,
    page,
    limit: 15,
  });

  // üëá –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –∫ —Ç–µ–∫—É—â–µ–º—É —Å–ø–∏—Å–∫—É
  useEffect(() => {
    if (isSuccess && data.length > 0) {
      setMovies((prev) => [...prev, ...data]);
    }
  }, [data, isSuccess]);

  const handleLoadMore = () => {
    // setLimit(5);
    setPage((prev) => prev + 1);
  };

  // console.log(page)

  console.log(data, error, isLoading);

  // btnMore={}

  return (
    <SectionList heading={heading}>
      <ListCardMoviesByGenre
        listCard={movies}
        onLoadMore={handleLoadMore}
        isLoading={isLoading}
      />
    </SectionList>
  );
};

export default MoviesByGenrePage;
